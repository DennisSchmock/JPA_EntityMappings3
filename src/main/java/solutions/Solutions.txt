1. Implemented
2. Implemented
3. Implemented

4. 
When running the project and generating the tables with the SINGLE_TABLE strategy
selected, following columns are generated in the DiscountType table:

ID - which is the primary key
Discount - which corrensponds the field in the subclass DiscountFixed
QUANTITYFORDISCOUNT - which corrensponds the field in the subclass DiscountQuantity
DTYPE - which is the Discriminator Table. The values in this column describes which
subclass is being used. If a subclass DiscountQuantity is used, it will be the value in 
the selected row. 
CUSTOMER_ID: Since I chose to do a bi-directional oneToMany relationship, this is a foreign
key pointing back to the customer. 

5. 
Using the JOINED strategy gives us a lot more tables:
discounttype - which corrensponds to the superclass 
DiscountFixed - which corrensponds to the subclass DiscountFixed
discountquantity - which corrensponds to the subclass DiscountQuantity

discounttype now have only three columns:
ID - which is the primary key
DTYPE - which still refers to the classes same as when using SINGLE_TABLE. 
CUSTOMER_ID: Same as before. 

discountfixed have two columns:
ID - which is both the PK in this table AND a FK referencing the PK in discounttype
DISCOUNT - which corrensponds to the field inside the subclass

discountquantity have three columns:
ID - which is both the PK in this table AND a FK referencing the PK in discounttype
DISCOUNT - which corrensponds to the field inside the subclass
QUANTITYFORDISCOUNT - which corrensponds the field in the subclass DiscountQuantity
